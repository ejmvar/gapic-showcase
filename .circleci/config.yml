version: 2
workflows:
  version: 2
  main:
    jobs:
      - build:
          filters: &all_commits
            tags:
              only: /.*/
      - kotlin-smoke-test:
          filters: *all_commits
      - python-smoke-test:
          filters: *all_commits
      - go-smoke-test:
          filters: *all_commits
      - protobufjs-load-test:
          filters: *all_commits

jobs:
  build:
    docker:
      - image: golang:1.11
    environment:
      GOPATH: /go
      GO111MODULE: "off"
    working_directory: /go/src/github.com/googleapis/gapic-showcase
    steps:
      - checkout
      - run:
          name: Check formatting
          command: "! gofmt -l ./ 2>&1 | read"
      - run:
          name: Lint code
          command: "! go lint ./... 2>&1 | read"
      - run:
          name: Examine and report suspicious constructs
          command: "! go tool vet ./ 2>&1 | read"
      - run:
          name: Install dependencies
          command: go get -v -d -t ./cmd/gapic-showcase && go install ./cmd/gapic-showcase
      - run:
          name: Run tests
          command: |
            go test ./server -coverprofile=coverage.txt -covermode=atomic
            go test ./client # Don't run coverage for generated tests.
      - run:
          name: Spin up showcase.
          command: gapic-showcase run
          background: true
      - run:
          name: Sanity check.
          command: gapic-showcase echo echo --response content --response.content "hello!"
      - run:
          name: Submit coverage data to codecov.
          command: bash <(curl -s https://codecov.io/bash)
          when: always

  kotlin-smoke-test:
    machine: true
    steps:
      - checkout
      - run:
          name: Stage showcase in proto dependencies
          command: |
              git clone -b input-contract https://github.com/googleapis/api-common-protos.git
              mkdir -p api-common-protos/google/showcase/v1alpha3/
              cp schema/* api-common-protos/google/showcase/v1alpha3/
      - run:
          name: Run kotlin generation
          command: |
            mkdir koutput
            docker run --rm \
              --mount type=bind,source="$(pwd)"/api-common-protos,target=/proto \
              --mount type=bind,source="$(pwd)"/koutput,target=/generated \
              gcr.io/kotlin-gapic/kgen:0.3.0

  python-smoke-test:
    machine: true
    steps:
      - checkout
      - run:
          name: Run python generation
          command: |
            mkdir pyout
            docker run --rm \
              --mount type=bind,source="$(pwd)"/schema/,destination=/in/google/showcase/v1alpha3/,readonly \
              --mount type=bind,source="$(pwd)"/pyout,target=/out \
              gcr.io/gapic-images/gapic-generator-python:0.6

  go-smoke-test:
    machine: true
    steps:
      - checkout
      - run:
          name: Run go generation
          command: |
            mkdir goout
            docker run \
              --rm \
              --mount type=bind,source="$(pwd)"/schema,destination=/in/protos/google/showcase/v1alpha3,readonly \
              --mount type=bind,source="$(pwd)"/goout,destination=/out/ \
              gcr.io/gapic-images/gapic-generator-go:v0.4 \
              --go-gapic-package "<github.com/googleapis/gapic-showcase/client;client>"

  protobufjs-load-test:
    docker:
      - image: node:8
    steps:
      - checkout
      - run:
          name: Install protobuf loader
          command: |
            npm install google-proto-files
      - run:
          name: Check if protos can be loaded by protobufjs
          command: |
            # TODO(landrito): make this scalable by using a glob.
            node -e "require('google-proto-files').loadSync('schema/echo.proto');"
            node -e "require('google-proto-files').loadSync('schema/testing.proto');"
